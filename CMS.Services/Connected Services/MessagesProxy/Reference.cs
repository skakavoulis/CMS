//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMS.Services.MessagesProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessagesProxy.IMessageManager")]
    public interface IMessageManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageManager/SendMessage", ReplyAction="http://tempuri.org/IMessageManager/SendMessageResponse")]
        string SendMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageManager/SendMessage", ReplyAction="http://tempuri.org/IMessageManager/SendMessageResponse")]
        System.Threading.Tasks.Task<string> SendMessageAsync(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageManagerChannel : CMS.Services.MessagesProxy.IMessageManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageManagerClient : System.ServiceModel.ClientBase<CMS.Services.MessagesProxy.IMessageManager>, CMS.Services.MessagesProxy.IMessageManager {
        
        public MessageManagerClient() {
        }
        
        public MessageManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendMessage(string message) {
            return base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task<string> SendMessageAsync(string message) {
            return base.Channel.SendMessageAsync(message);
        }
    }
}
